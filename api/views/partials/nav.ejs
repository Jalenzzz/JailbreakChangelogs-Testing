<%- include('surveys') %>
<%- include('login-modal') %>
<nav
  class="navbar navbar-expand-lg custom-navbar-color sticky-top main-navigation"
>
  <div
    class="container-fluid d-flex justify-content-between align-items-center"
  >
    <!-- Left side - Logo -->
    <div class="navbar-brand-container">
      <a class="navbar-brand" href="/">
        <img
          class="navbar-logo"
          src="<%= ['/values', '/trading', '/values/calculator'].includes(locals.req?.path) || locals.req?.path?.startsWith('/trading/ad') ? '/assets/logos/JB-Changelogs-Collab-480.webp' : '/assets/logos/JB-Changelogs-480.webp' %>"
          srcset="<%= ['/values', '/trading', '/values/calculator'].includes(locals.req?.path) || locals.req?.path?.startsWith('/trading/ad') ? 
            '/assets/logos/JB-Changelogs-Collab-480.webp 480w, /assets/logos/JB-Changelogs-Collab-720.webp 720w, /assets/logos/JB-Changelogs-Collab-933.webp 933w' : 
            '/assets/logos/JB-Changelogs-480.webp 480w, /assets/logos/JB-Changelogs-720.webp 720w, /assets/logos/JB-Changelogs-933.webp 933w' 
          %>"
          sizes="(min-width: 580px) 311px, 173px"
          alt="<%= logoAlt %>"
          width="311"
          height="70"
        />
      </a>
    </div>

    <!-- Right side - Navigation and Profile -->
    <div class="navbar-content-right">
      <!-- Mobile hamburger menu -->
      <div class="d-flex d-lg-none align-items-center">
        <button
          id="hamburgerMenu"
          class="btn hamburger-btn p-0 d-flex align-items-center"
          type="button"
          aria-controls="sideMenu"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            <rect width="24" height="24" fill="none" />
            <path
              fill="none"
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M3 6h18M3 12h18M3 18h18"
            />
          </svg>
        </button>
      </div>

      <!-- Desktop menu -->
      <div class="navbar-desktop-menu d-none d-lg-flex">
        <ul class="navbar-nav align-items-center">
          <!-- Regular nav items -->
          <li class="nav-item">
            <a class="nav-link" href="/changelogs">Changelogs</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/seasons">Seasons</a>
          </li>

          <!-- Values dropdown -->
          <li class="nav-item dropdown">
            <a class="nav-link no-click-toggle" href="#">
              Values
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                class="dropdown-arrow"
              >
                <path fill="currentColor" d="M7 10l5 5 5-5H7z" />
              </svg>
            </a>
            <ul class="dropdown-menu dropdown-menu">
              <li><a class="dropdown-item" href="/values">Value List</a></li>
              <li><hr class="dropdown-divider" /></li>
              <li>
                <a class="dropdown-item" href="/values/calculator"
                  >Value Calculator</a
                >
              </li>
              <li><hr class="dropdown-divider" /></li>
              <li>
                <a class="dropdown-item" href="/dupes/calculator"
                  >Dupe Calculator</a
                >
              </li>
              <li><hr class="dropdown-divider" /></li>
              <li>
                <a class="dropdown-item" href="/trading">Trade Ads</a>
              </li>
            </ul>
          </li>

          <!-- Community -->
          <li class="nav-item dropdown">
            <a class="nav-link no-click-toggle" href="#">
              Community
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                class="dropdown-arrow"
              >
                <path fill="currentColor" d="M7 10l5 5 5-5H7z" />
              </svg>
            </a>
            <ul class="dropdown-menu dropdown-menu-dark">
              <li><a class="dropdown-item" href="/users">User Search</a></li>
              <li><hr class="dropdown-divider" /></li>
              <li>
                <a class="dropdown-item" href="/servers">Private Servers</a>
              </li>
              <li><hr class="dropdown-divider" /></li>
              <li><a class="dropdown-item" href="/bot">Our Discord Bot</a></li>
              <li><hr class="dropdown-divider" /></li>
              <li>
                <a class="dropdown-item" href="/faq"
                  >Frequently Asked Questions</a
                >
              </li>
            </ul>
          </li>

          <!-- Profile picture icon with text and dropdown (visible on desktop) -->
          <li class="nav-item dropdown ms-2">
            <a
              class="nav-link d-flex align-items-center gap-2"
              href="#"
              id="navbarDropdown"
              role="button"
              aria-expanded="false"
            >
              <img
                src=""
                alt="Profile"
                class="rounded-circle"
                id="profile-picture"
                width="32"
                height="32"
              />
              <span class="login-text text-white"></span>
            </a>
            <ul
              class="dropdown-menu dropdown-menu-dark dropdown-menu-end"
              aria-labelledby="navbarDropdown"
              id="userDropdown"
            >
              <!-- Dropdown items will be populated by JavaScript -->
            </ul>
          </li>
        </ul>
      </div>
    </div>

    <!-- Full-screen overlay menu for mobile -->
    <div id="sideMenuBackdrop" class="side-menu-backdrop"></div>
    <div id="sideMenu" class="side-menu d-lg-none">
      <div class="side-menu-content">
        <!-- Header with close button -->
        <div class="side-menu-header">
          <div class="side-menu-brand">
            <img
              class="navbar-logo-small"
              src="<%= ['/values', '/trading', '/values/calculator'].includes(locals.req?.path) || locals.req?.path?.startsWith('/trading/ad') ? '/assets/logos/JB-Changelogs-Collab-534.webp' : '/assets/logos/JB-Changelogs-534.webp' %>"
              srcset="<%= ['/values', '/trading', '/values/calculator'].includes(locals.req?.path) || locals.req?.path?.startsWith('/trading/ad') ? 
                '/assets/logos/JB-Changelogs-Collab-534.webp 534w' : 
                '/assets/logos/JB-Changelogs-534.webp 534w' 
              %>"
              sizes="178px"
              alt="<%= logoAlt %>"
              width="178"
              height="40"
            />
          </div>
          <button
            id="sideMenuClose"
            class="side-menu-close"
            aria-label="Close menu"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="32"
              height="32"
              viewBox="0 0 24 24"
            >
              <rect width="24" height="24" fill="none" />
              <path
                fill="none"
                stroke="currentColor"
                stroke-dasharray="12"
                stroke-dashoffset="12"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 12l7 7M12 12l-7 -7M12 12l-7 7M12 12l7 -7"
              >
                <animate
                  fill="freeze"
                  attributeName="stroke-dashoffset"
                  dur="0.3s"
                  values="12;0"
                />
              </path>
            </svg>
          </button>
        </div>

        <!-- Move profile section here -->
        <div class="side-menu-profile">
          <div
            id="mobileAvatarToggle"
            class="d-flex align-items-center gap-2 w-100 mb-1 mobile-avatar-button"
            role="button"
            aria-expanded="false"
            aria-controls="mobileProfileSection"
          >
            <div class="d-flex align-items-center gap-2 flex-grow-1">
              <img
                src=""
                alt="Profile"
                class="rounded-circle"
                id="profile-picture-mobile"
                width="34"
                height="34"
              />
              <span class="login-text text-white"></span>
            </div>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="16"
              height="16"
              viewBox="0 0 24 24"
              class="expand-icon"
            >
              <rect width="24" height="24" fill="none" />
              <path
                fill="currentColor"
                d="M7.41 8.58L12 13.17l4.59-4.59L18 10l-6 6l-6-6z"
              />
            </svg>
          </div>

          <div
            class="mobile-profile-section collapsed"
            id="mobileProfileSection"
          >
            <!-- This section will be populated by JavaScript -->
          </div>
        </div>

        <!-- Navigation Menu -->
        <nav class="side-menu-nav">
          <div class="side-menu-section">
            <div class="side-menu-section-title">Game & Updates</div>
            <a class="side-menu-item" href="/changelogs">Changelogs</a>
            <a class="side-menu-item" href="/seasons">Seasons</a>
          </div>

          <div class="side-menu-section">
            <div class="side-menu-section-title">Values</div>
            <a class="side-menu-item" href="/values">Value List</a>
            <a class="side-menu-item" href="/values/calculator"
              >Value Calculator</a
            >
            <a class="side-menu-item" href="/dupes/calculator"
              >Dupe Calculator</a
            >
            <a class="side-menu-item" href="/trading">Trade Ads</a>
          </div>

          <div class="side-menu-section">
            <div class="side-menu-section-title">Community</div>
            <a class="side-menu-item" href="/users">Users</a>
            <a class="side-menu-item" href="/servers">Private Servers</a>
            <a class="side-menu-item" href="/bot">Our Discord Bot</a>
          </div>

          <div class="side-menu-section">
            <div class="side-menu-section-title">Help</div>
            <a class="side-menu-item" href="/faq">FAQ</a>
          </div>
        </nav>
      </div>
    </div>
  </div>
</nav>

<script>
  // Add this function to show login modal with Roblox tab
  function showRobloxLoginModal() {
    const loginModal = new bootstrap.Modal(document.getElementById('loginModal'));
    loginModal.show();
    
    // Switch to Roblox tab
    const tabButtons = document.querySelectorAll('.auth-toggle-btn');
    const tabContents = document.querySelectorAll('.tab-content');
    
    // Remove active class from all buttons and contents
    tabButtons.forEach(btn => btn.classList.remove('active'));
    tabContents.forEach(content => content.classList.add('d-none'));
    
    // Add active class to Roblox button and show Roblox content
    const robloxButton = document.querySelector('.auth-toggle-btn[data-tab="roblox"]');
    robloxButton.classList.add('active');
    document.getElementById('roblox-tab').classList.remove('d-none');
  }

  window.openSideMenu = function () {
    const sideMenu = document.getElementById("sideMenu");
    const backdrop = document.getElementById("sideMenuBackdrop");
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");
    if (sideMenu && mobileAvatarToggle) {
      document.body.classList.add("menu-open");
      sideMenu.classList.add("active");
      backdrop.classList.add("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "true");

      // Store current scroll position
      window.menuScrollPos = window.scrollY;
    }
  };

  window.closeSideMenu = function () {
    const sideMenu = document.getElementById("sideMenu");
    const backdrop = document.getElementById("sideMenuBackdrop");
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");
    if (sideMenu && mobileAvatarToggle) {
      document.body.classList.remove("menu-open");
      sideMenu.classList.remove("active");
      backdrop.classList.remove("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "false");

      // Restore scroll position
      window.scrollTo(0, window.menuScrollPos || 0);
    }
  };

  // Fix the sideMenuClose event listener
  const sideMenuClose = document.getElementById("sideMenuClose");
  if (sideMenuClose) {
    sideMenuClose.addEventListener("click", function () {
      window.closeSideMenu();
    });
  }

  document.addEventListener("DOMContentLoaded", function () {
    const sideMenu = document.getElementById("sideMenu");
    const sideMenuClose = document.getElementById("sideMenuClose");
    const userDropdown = document.getElementById("userDropdown");
    const profilePicture = document.getElementById("profile-picture");
    const mobileProfilePicture = document.getElementById(
      "profile-picture-mobile"
    );

    const mobileProfileSection = document.getElementById(
      "mobileProfileSection"
    );
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");
    const sideMenuBackdrop = document.getElementById("sideMenuBackdrop");

    // Simply check if token cookie exists
    const isLoggedIn = !!getCookie("token");
    const avatarUrl = localStorage.getItem("avatar");

    async function setProfilePictureSrc(imgElement, src) {
      if (imgElement) {
        try {
          if (src) {
            imgElement.src = src;
          } else {
            const userData = JSON.parse(localStorage.getItem("user") || "{}");
            if (userData.id) {
              const avatarUrl = await window.checkAndSetAvatar(userData);
              imgElement.src = avatarUrl;
            } else {
              imgElement.outerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
	<rect width="32" height="32" fill="none" />
	<path fill="none" d="M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0M20.5 12.5A4.5 4.5 0 1 1 16 8a4.5 4.5 0 0 1 4.5 4.5" />
	<path fill="currentColor" d="M26.749 24.93A13.99 13.99 0 1 0 2 16a13.9 13.9 0 0 0 3.251 8.93l-.02.017c.07.084.15.156.222.239c.09.103.187.2.28.3q.418.457.87.87q.14.124.28.242q.48.415.99.782c.044.03.084.069.128.1v-.012a13.9 13.9 0 0 0 16 0v.012c.044-.031.083-.07.128-.1q.51-.368.99-.782q.14-.119.28-.242q.451-.413.87-.87c.093-.1.189-.197.28-.3c.071-.083.152-.155.222-.24ZM16 8a4.5 4.5 0 1 1-4.5 4.5A4.5 4.5 0 0 1 16 8M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0" />
</svg>`;
            }
          }
        } catch (error) {
          console.error("Error setting profile picture:", error);
          imgElement.src = `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
	<rect width="32" height="32" fill="none" />
	<path fill="none" d="M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0M20.5 12.5A4.5 4.5 0 1 1 16 8a4.5 4.5 0 0 1 4.5 4.5" />
	<path fill="currentColor" d="M26.749 24.93A13.99 13.99 0 1 0 2 16a13.9 13.9 0 0 0 3.251 8.93l-.02.017c.07.084.15.156.222.239c.09.103.187.2.28.3q.418.457.87.87q.14.124.28.242q.48.415.99.782c.044.03.084.069.128.1v-.012a13.9 13.9 0 0 0 16 0v.012c.044-.031.083-.07.128-.1q.51-.368.99-.782q.14-.119.28-.242q.451-.413.87-.87c.093-.1.189-.197.28-.3c.071-.083.152-.155.222-.24ZM16 8a4.5 4.5 0 1 1-4.5 4.5A4.5 4.5 0 0 1 16 8M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0" />
</svg>`;
        }
      }
    }

    function getProfileContent(isLoggedIn) {
      if (isLoggedIn) {
        const userData = JSON.parse(localStorage.getItem("user") || "{}");
        const hasRoblox = userData.roblox_id != null;
        const userId = userData.id;

        return `
          <div class="profile-actions">
            <a class="nav-link" href="/users/${userId}">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" fill-rule="evenodd" d="M8 7a4 4 0 1 1 8 0a4 4 0 0 1-8 0m0 6a5 5 0 0 0-5 5a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3a5 5 0 0 0-5-5z" clip-rule="evenodd" />
</svg>
             View Profile
            </a>
            <a class="nav-link" href="/settings">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                <rect width="24" height="24" fill="none" />
                <path fill="currentColor" d="M19.14 12.94c.04-.3.06-.61.06-.94c0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.07.63-.07.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6s3.6 1.62 3.6 3.6s-1.62 3.6-3.6 3.6z" />
              </svg>
              Settings
            </a>
            ${
              !hasRoblox
                ? `
            <a class="nav-link" href="#" onclick="event.preventDefault(); showRobloxLoginModal()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="M18.926 23.998L0 18.892L5.075.002L24 5.108ZM15.348 10.09l-5.282-1.453l-1.414 5.273l5.282 1.453z" />
</svg> Authenticate with Roblox
            </a>
            `
                : ""
            }
            <a class="nav-link text-danger" href="#" onclick="event.preventDefault(); logout()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                <rect width="24" height="24" fill="none" />
                <path fill="currentColor" d="m17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5M4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z" />
              </svg>
              Log out
            </a>
          </div>
        `;
      } else {
        return `
          <a class="nav-link" href="#" data-bs-toggle="modal" data-bs-target="#loginModal">
            <svg xmlns="http://www.w3.org/2000/svg" width="20.59" height="16" viewBox="0 0 256 199">
              <rect width="256" height="199" fill="none" />
              <path fill="#5865f2" d="M216.856 16.597A208.5 208.5 0 0 0 164.042 0c-2.275 4.113-4.933 9.645-6.766 14.046q-29.538-4.442-58.533 0c-1.832-4.4-4.55-9.933-6.846-14.046a207.8 207.8 0 0 0-52.855 16.638C5.618 67.147-3.443 116.4 1.087 164.956c22.169 16.555 43.653 26.612 64.775 33.193A161 161 0 0 0 79.735 175.3a136.4 136.4 0 0 1-21.846-10.632a109 109 0 0 0 5.356-4.237c42.122 19.702 87.89 19.702 129.51 0a132 132 0 0 0 5.355 4.237a136 136 0 0 1-21.886 10.653c4.006 8.02 8.638 15.67 13.873 22.848c21.142-6.58 42.646-16.637 64.815-33.213c5.316-56.288-9.08-105.09-38.056-148.36M85.474 135.095c-12.645 0-23.015-11.805-23.015-26.18s10.149-26.2 23.015-26.2s23.236 11.804 23.015 26.2c.02 14.375-10.148 26.18-23.015 26.18m85.051 0c-12.645 0-23.014-11.805-23.014-26.18s10.148-26.2 23.014-26.2c12.867 0 23.236 11.804 23.015 26.2c0 14.375-10.148 26.18-23.015 26.18" />
            </svg> Login
          </a>
        `;
      }
    }

    function getDropdownContent(isLoggedIn) {
      if (isLoggedIn) {
        const userData = JSON.parse(localStorage.getItem("user") || "{}");
        const hasRoblox = userData.roblox_id != null;
        const userId = userData.id;

        return `
          <li>
            <a class="dropdown-item" href="/users/${userId}">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" fill-rule="evenodd" d="M8 7a4 4 0 1 1 8 0a4 4 0 0 1-8 0m0 6a5 5 0 0 0-5 5a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3a5 5 0 0 0-5-5z" clip-rule="evenodd" />
</svg>
               View Profile
            </a>
          </li>
          <li>
            <a class="dropdown-item" href="/settings">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                <rect width="24" height="24" fill="none" />
                <path fill="currentColor" d="M19.14 12.94c.04-.3.06-.61.06-.94c0-.32-.02-.64-.07-.94l2.03-1.58c.18-.14.23-.41.12-.61l-1.92-3.32c-.12-.22-.37-.29-.59-.22l-2.39.96c-.5-.38-1.03-.7-1.62-.94l-.36-2.54c-.04-.24-.24-.41-.48-.41h-3.84c-.24 0-.43.17-.47.41l-.36 2.54c-.59.24-1.13.57-1.62.94l-2.39-.96c-.22-.08-.47 0-.59.22L2.74 8.87c-.12.21-.08.47.12.61l2.03 1.58c-.05.3-.07.63-.07.94s.02.64.07.94l-2.03 1.58c-.18.14-.23.41-.12.61l1.92 3.32c.12.22.37.29.59.22l2.39-.96c.5.38 1.03.7 1.62.94l.36 2.54c.05.24.24.41.48.41h3.84c.24 0 .44-.17.47-.41l.36-2.54c.59-.24 1.13-.56 1.62-.94l2.39.96c.22.08.47 0 .59-.22l1.92-3.32c.12-.22.07-.47-.12-.61l-2.01-1.58zM12 15.6c-1.98 0-3.6-1.62-3.6-3.6s1.62-3.6 3.6-3.6s3.6 1.62 3.6 3.6s-1.62 3.6-3.6 3.6z" />
              </svg>
              Settings
            </a>
          </li>
          ${
            !hasRoblox
              ? `
          <li>
            <a class="dropdown-item" href="#" onclick="event.preventDefault(); showRobloxLoginModal()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="M18.926 23.998L0 18.892L5.075.002L24 5.108ZM15.348 10.09l-5.282-1.453l-1.414 5.273l5.282 1.453z" />
</svg> Authenticate with Roblox
            </a>
          </li>`
              : ""
          }
          <li><hr class="dropdown-divider"></li>
          <li>
            <a class="dropdown-item text-danger" href="#" onclick="event.preventDefault(); logout()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                <rect width="24" height="24" fill="none" />
                <path fill="currentColor" d="m17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5M4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z" />
              </svg>
             Log out
            </a>
          </li>
        `;
      } else {
        return `
          <li>
            <a class="dropdown-item" href="#" data-bs-toggle="modal" data-bs-target="#loginModal">
              <svg xmlns="http://www.w3.org/2000/svg" width="20.59" height="16" viewBox="0 0 256 199">
                <rect width="256" height="199" fill="none" />
                <path fill="#5865f2" d="M216.856 16.597A208.5 208.5 0 0 0 164.042 0c-2.275 4.113-4.933 9.645-6.766 14.046q-29.538-4.442-58.533 0c-1.832-4.4-4.55-9.933-6.846-14.046a207.8 207.8 0 0 0-52.855 16.638C5.618 67.147-3.443 116.4 1.087 164.956c22.169 16.555 43.653 26.612 64.775 33.193A161 161 0 0 0 79.735 175.3a136.4 136.4 0 0 1-21.846-10.632a109 109 0 0 0 5.356-4.237c42.122 19.702 87.89 19.702 129.51 0a132 132 0 0 0 5.355 4.237a136 136 0 0 1-21.886 10.653c4.006 8.02 8.638 15.67 13.873 22.848c21.142-6.58 42.646-16.637 64.815-33.213c5.316-56.288-9.08-105.09-38.056-148.36M85.474 135.095c-12.645 0-23.015-11.805-23.015-26.18s10.149-26.2 23.015-26.2s23.236 11.804 23.015 26.2c.02 14.375-10.148 26.18-23.015 26.18m85.051 0c-12.645 0-23.014-11.805-23.014-26.18s10.148-26.2 23.014-26.2c12.867 0 23.236 11.804 23.015 26.2c0 14.375-10.148 26.18-23.015 26.18" />
              </svg> Login
            </a>
          </li>
        `;
      }
    }

    async function updateContent() {
      try {
        if (isLoggedIn) {
          console.log("[Nav] Updating content for logged in user");
          const userData = JSON.parse(localStorage.getItem("user") || "{}");

          if (!userData.id) {
            console.log("[Nav] No user data found, retrying...");
            setTimeout(updateContent, 100);
            return;
          }
        }

        const dropdownContent = getDropdownContent(isLoggedIn);
        const profileContent = getProfileContent(isLoggedIn);

        if (userDropdown) {
          userDropdown.innerHTML = dropdownContent;
          const navbarDropdown = document.getElementById('navbarDropdown');
          const profileListItem = navbarDropdown.closest('li');
          
          if (isLoggedIn) {
            navbarDropdown.classList.add('dropdown-toggle');
            navbarDropdown.setAttribute('data-bs-toggle', 'dropdown');
            profileListItem.classList.add('dropdown');
          } else {
            profileListItem.classList.remove('dropdown');
            navbarDropdown.removeAttribute('data-bs-toggle');
            navbarDropdown.setAttribute('data-bs-toggle', 'modal');
            navbarDropdown.setAttribute('data-bs-target', '#loginModal');
          }
        }
        if (mobileProfileSection)
          mobileProfileSection.innerHTML = profileContent;

        try {
          await setProfilePictureSrc(profilePicture, avatarUrl);
          await setProfilePictureSrc(mobileProfilePicture, avatarUrl);
        } catch (error) {
          console.error("[Nav] Error setting profile pictures:", error);
        }
      } catch (error) {
        console.error("[Nav] Error updating content:", error);
      }
    }

    // Add text next to avatars based on login status
    const updateLoginText = () => {
      const loginTextElements = document.querySelectorAll(".login-text");
      const isLoggedIn = !!getCookie("token");
      const userData = JSON.parse(localStorage.getItem("user") || "{}");

      loginTextElements.forEach((element) => {
        if (isLoggedIn) {
          element.textContent =
            userData.username || userData.global_name || "User";
        } else {
          element.textContent = "Login";
        }
      });
    };

    // Call updateLoginText initially and whenever auth state changes
    updateLoginText();
    const origUpdateContent = updateContent;
    updateContent = function () {
      origUpdateContent();
      updateLoginText();
    };

    updateContent();

    // Close menu when clicking backdrop
    if (sideMenuBackdrop) {
      sideMenuBackdrop.addEventListener("click", function () {
        window.closeSideMenu();
      });
    }

    // Replace mobileAvatarToggle with hamburgerMenu
    const hamburgerMenu = document.getElementById("hamburgerMenu");

    // Update menu toggle handlers
    hamburgerMenu.addEventListener("click", function () {
      window.openSideMenu();
    });

    // Add click handler for mobile avatar toggle
    if (mobileAvatarToggle) {
      mobileAvatarToggle.addEventListener("click", function (e) {
        e.stopPropagation();
        const isExpanded = this.getAttribute("aria-expanded") === "true";
        this.setAttribute("aria-expanded", !isExpanded);

        const profileSection = document.getElementById("mobileProfileSection");
        if (profileSection) {
          if (isExpanded) {
            profileSection.classList.remove("expanded");
          } else {
            profileSection.classList.add("expanded");
          }
        }
      });
    }

    // Close profile section when clicking outside
    document.addEventListener("click", function (e) {
      const profileSection = document.getElementById("mobileProfileSection");
      const avatarToggle = document.getElementById("mobileAvatarToggle");

      if (profileSection && avatarToggle) {
        if (
          !profileSection.contains(e.target) &&
          !avatarToggle.contains(e.target)
        ) {
          profileSection.classList.remove("expanded");
          avatarToggle.setAttribute("aria-expanded", "false");
        }
      }
    });
  });
  if (sideMenuClose) {
    sideMenuClose.addEventListener("click", function () {
      sideMenu.classList.remove("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "false");
    });
  }

  // Add event listener to prevent scroll propagation
  document.addEventListener("DOMContentLoaded", function () {
    const sideMenu = document.getElementById("sideMenu");
    if (sideMenu) {
      sideMenu.addEventListener(
        "wheel",
        function (e) {
          e.stopPropagation();
        },
        { passive: true }
      );

      sideMenu.addEventListener(
        "touchmove",
        function (e) {
          e.stopPropagation();
        },
        { passive: true }
      );
    }
  });

  // Add this to enable hover dropdowns without clicking
  document.addEventListener("DOMContentLoaded", function () {
    const dropdowns = document.querySelectorAll(".navbar-nav .dropdown");

    dropdowns.forEach((dropdown) => {
      const menu = dropdown.querySelector(".dropdown-menu");

      // Only handle hover events on desktop
      const handleHover = (e) => {
        if (window.innerWidth >= 992) {
          menu.classList.toggle("show", e.type === "mouseenter");
        }
      };

      dropdown.addEventListener("mouseenter", handleHover);
      dropdown.addEventListener("mouseleave", handleHover);

      // For mobile: toggle on click
      const link = dropdown.querySelector(".no-click-toggle");
      if (link) {
        link.addEventListener("click", (e) => {
          if (window.innerWidth < 992) {
            e.preventDefault();
            menu.classList.toggle("show");
          } else {
            e.preventDefault(); // Prevent any action on desktop
          }
        });
      }
    });
  });
</script>

<style>
  /* Navbar base styles */
  .main-navigation .dropdown-toggle-no-caret::after {
    display: none !important;
  }

  .main-navigation .mobile-profile-section {
    margin-top: 1rem;
  }

  .main-navigation #sideMenuClose {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 1030;
  }

  .main-navigation .side-menu-content .nav-link {
    padding: 0.5rem 0;
    color: var(--text-primary);
  }

  .main-navigation .mobile-profile-section .nav-link {
    color: var(--text-primary);
    display: block;
    padding: 0.5rem 0;
  }

  .main-navigation .profile-actions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .main-navigation .side-menu-content .nav-item {
    padding: 0 1rem;
  }

  .main-navigation .nav-separator {
    margin: 0.5rem 0;
  }

  /* Navbar structure */
  .main-navigation .custom-navbar-color .container-fluid {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1920px;
    padding: 0 24px;
    height: 100%;
    background-color: var(--bg-primary);
  }

  .main-navigation .navbar-brand-wrapper {
    flex: 0 0 auto;
    margin-right: 20px;
  }

  .main-navigation .navbar-brand {
    padding: 0;
    margin: 0;
    display: flex;
    align-items: center;
  }

  .main-navigation .navbar-desktop-menu {
    flex: 0 0 auto;
    margin-left: auto;
  }

  .main-navigation .navbar-desktop-menu .navbar-nav {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .main-navigation .navbar-desktop-menu .nav-item {
    white-space: nowrap;
  }

  .main-navigation.navbar {
    position: sticky;
    top: 0;
    z-index: 1000;
    width: 100%;
    background-color: var(--bg-primary) !important;
  }

  .main-navigation .container-fluid {
    width: 100%;
    max-width: none;
    padding: 0 24px;
    margin: 0;
  }

  /* Navigation positioning */
  .main-navigation .navbar-brand-container {
    position: absolute;
    left: 24px;
    display: flex;
    align-items: center;
  }

  .main-navigation .navbar-content-right {
    position: absolute;
    right: 24px;
    display: flex;
    align-items: center;
  }

  /* Enhanced nav-link styles */
  .main-navigation .nav-link {
    position: relative;
    transition: all 0.3s ease;
    padding: 4px 6px;
    color: var(--text-primary) !important;
  }

  .main-navigation .nav-link::after {
    content: "";
    position: absolute;
    width: 0;
    height: 2px;
    bottom: -2px;
    left: 50%;
    background: var(--accent-color-light) !important;
    transition: all 0.3s ease;
    transform: translateX(-50%);
    opacity: 0;
  }

  .main-navigation .nav-link:hover::after {
    width: 100%;
    opacity: 1;
  }

  .main-navigation .nav-link:hover {
    transform: translateY(-1px);
    background: var(--bg-primary) !important;
    border-radius: 6px;
    color: var(--accent-color-light) !important;
  }

  /* Dropdown styles */
  .main-navigation .dropdown-menu {
    margin-top: 0;
    padding: 0.5rem 0;
    background: var(--bg-secondary) !important;
    border: 1px solid var(--accent-color) !important;
    border-radius: 6px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
    -webkit-backdrop-filter: blur(10px);
    backdrop-filter: blur(10px);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .main-navigation .dropdown-item {
    position: relative;
    padding: 0.75rem 1.25rem;
    transition: all 0.2s ease;
    background: transparent;
    color: var(--text-primary) !important;
  }

  .main-navigation .dropdown-item:hover {
    background: var(--bg-secondary) !important;
    color: var(--accent-color-light) !important;
    font-weight: bold !important;
  }

  .main-navigation .dropdown-item::before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 3px;
    height: 0;
    background: var(--accent-color-light) !important;
    transition: all 0.2s ease;
  }

  .main-navigation .dropdown-item:hover::before {
    height: 70%;
  }

  /* Mobile menu styles */
  .main-navigation .side-menu-item {
    position: relative;
    transition: all 0.3s ease;
    padding: 0.75rem 1.25rem;
    display: block;
    color: var(--text-primary);
    text-decoration: none;
  }

  .main-navigation .side-menu-item:hover {
    background: var(--bg-secondary);
    padding-left: 1.75rem;
    color: var (--accent-color-light);
  }

  .main-navigation .side-menu-item::before {
    content: "";
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 3px;
    height: 0;
    background: var(--accent-color-light);
    transition: all 0.2s ease;
  }

  .main-navigation .side-menu-item:hover::before {
    height: 70%;
  }

  /* Profile elements */
  .main-navigation .profile-button,
  .main-navigation #mobileAvatarToggle {
    transition: all 0.3s ease;
  }

  .main-navigation .profile-button:hover,
  .main-navigation #mobileAvatarToggle:hover {
    transform: translateY(-1px);
    background: var(--bg-secondary);
    border-radius: 6px;
  }

  /* Icon animations */
  .main-navigation .nav-icon,
  .main-navigation .dropdown-item svg,
  .main-navigation .side-menu-item svg {
    transition: transform 0.2s ease;
  }

  .main-navigation .nav-link:hover .nav-icon,
  .main-navigation .dropdown-item:hover svg,
  .main-navigation .side-menu-item:hover svg {
    transform: scale(1.1);
  }

  /* Dropdown positioning */
  .main-navigation .navbar-nav .nav-item.dropdown {
    position: relative;
    z-index: 1001;
  }

  .main-navigation .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%) translateY(-10px);
    min-width: 200px;
    z-index: 1002;
    opacity: 0;
    visibility: hidden;
  }

  .main-navigation .nav-item.dropdown:hover .dropdown-menu {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(0);
  }

  .main-navigation .nav-item.dropdown.ms-2 .dropdown-menu {
    left: auto;
    right: 0;
    transform: translateY(-10px);
  }

  .main-navigation .nav-item.dropdown.ms-2:hover .dropdown-menu {
    transform: translateY(0);
  }

  /* Media queries */
  @media screen and (min-width: 992px) {
    .main-navigation .navbar-content-right {
      display: flex !important;
    }

    .main-navigation .navbar-desktop-menu {
      display: flex !important;
    }
  }

  @media screen and (max-width: 576px) {
    .main-navigation .custom-navbar-color .navbar-brand {
      margin-right: 20px;
      margin-left: -15px;
    }

    .main-navigation .navbar-logo {
      height: 40px !important;
      margin-left: -5px !important;
    }

    .main-navigation .custom-navbar-color .container-fluid {
      padding-left: 12px !important;
    }

    .main-navigation #mobileAvatarToggle {
      margin-right: -10px;
    }
  }

  /* Add this to prevent dropdown toggle cursor on desktop */
  @media (min-width: 992px) {
    .main-navigation .no-click-toggle {
      cursor: default;
    }
  }

    /* Avatar and username styling - Using more specific selectors */
    .main-navigation .nav-item.dropdown.ms-2 .nav-link {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 6px 12px;
    border: 3px solid var(--accent-color-light);
    border-radius: 50px;
    transition: all 0.2s ease;
    color: var(--bg-primary) !important;
  }

  .main-navigation .nav-item.dropdown.ms-2 .nav-link:hover {
    color: var(--bg-primary) !important;
    transform: translateY(-1px);
  }

  .main-navigation .nav-item.dropdown.ms-2 .nav-link::after {
    display: none;
  }

  .main-navigation .nav-item.dropdown.ms-2 img.rounded-circle {
    border: 2px solid var(--accent-color);
    transition: all 0.2s ease;
  }

  .main-navigation .nav-item.dropdown.ms-2 .nav-link:hover img.rounded-circle {
    border-color: var(--bg-primary);
  }

  .main-navigation .login-text {
    font-weight: 600;
  }

  /* Mobile avatar toggle styling */
  .main-navigation #mobileAvatarToggle {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 6px 12px;
    border: 1px solid var(--accent-color);
    border-radius: 50px;
    transition: all 0.2s ease;
  }

  .main-navigation #mobileAvatarToggle:hover {
    background: var(--accent-color-light);
    color: var(--bg-primary);
  }

  .main-navigation #mobileAvatarToggle img.rounded-circle {
    border: 2px solid var(--accent-color);
    transition: all 0.2s ease;
  }

  .main-navigation #mobileAvatarToggle:hover img.rounded-circle {
    border-color: var(--bg-primary);
  }

  /* Hamburger button styles */
  .main-navigation .hamburger-btn {
    color: var(--text-primary);
    padding: 8px !important;
    border: 1px solid var(--accent-color);
    border-radius: 8px;
    transition: all 0.2s ease;
  }

  .main-navigation .hamburger-btn:hover {
    background: var(--accent-color-light);
    color: var(--bg-primary);
  }

  /* Side menu profile section */
  .main-navigation .side-menu-profile {
    padding: 1rem;
    border-bottom: 1px solid var(--accent-color);
  }

  .main-navigation .side-menu-profile #mobileAvatarToggle {
    background: var(--bg-secondary);
    padding: 8px 16px;
    border: 1px solid var(--accent-color);
    border-radius: 50px;
    cursor: default;
  }

  .main-navigation .side-menu-profile #mobileAvatarToggle:hover {
    background: var(--bg-secondary);
    color: var(--text-primary);
  }

  /* Mobile profile section styling */
  .main-navigation .mobile-profile-section {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease-out;
    opacity: 0;
  }

  .main-navigation .mobile-profile-section.expanded {
    max-height: 200px;
    opacity: 1;
    margin-top: -8px;
    margin-bottom: 8px;
  }

  .main-navigation .mobile-avatar-button {
    cursor: pointer;
    -webkit-user-select: none;
    user-select: none;
  }

  .main-navigation .mobile-avatar-button .expand-icon {
    transition: transform 0.3s ease;
  }

  .main-navigation .mobile-avatar-button[aria-expanded="true"] .expand-icon {
    transform: rotate(180deg);
  }

  /* Button styles */
  .btn.btn-primary.btn-lg {
    background-color: var(--accent-color) !important;
    border-color: var(--accent-color) !important;
    transition: all 0.2s ease;
  }

  .btn.btn-primary.btn-lg:hover {
    background-color: var(--accent-color-light) !important;
    border-color: var(--accent-color-light) !important;
  }
</style>
